@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include <tupadr3/common>
!include <tupadr3/font-awesome/server>
!include <tupadr3/font-awesome/database>

title Technologiediagramm Pavillion Steuerung

Person(user, Benutzer, "Eine Person die das Pavillion steuern will & Netzwerkzugriff hat")

System_Boundary(control, "Pavillion Steuerung") {
	System(mcu, "ESP8266 Node MCU, Microcontroller", "Hardwaresystem zum steuern des Pavillions")
	System(temp_sensor, "DHT11 Temperatur- & Luftfeuchtigkeitssensor", "Hardwaresensor, Temperatur & Luftfeuchtigkeit. Sendet Daten an Microcontroller")
	FA_SERVER(esp_webserver, Webserver) 
	rectangle "Reedsensor" as reed
	rectangle "Anemometer" as anemo
	rectangle "Regensensor" as rain
}

System_Boundary(server, "Homeserver") {
	System(ha, "Homeassistant", "Interface zum Automatisieren und steuern des Pavillions") 
	Container(mqtt_broker, "Mosquitto, MQTT-Broker", "Middleware", "Nachrichten werden finden sich unter einem Topic wieder, welches Teilnehmer abonnieren") 
	FA_SERVER(ha_webserver, Webserver)

user --> esp_webserver : verwendet
esp_webserver -- mcu

user --> ha_webserver : verwendet
ha_webserver -- ha

ha --> mqtt_broker : veröffentlicht
ha --> mqtt_broker : abonniert
mcu --> mqtt_broker : abonniert
mcu --> mqtt_broker : veröffentlicht

mcu -left- reed 
mcu -left- anemo
mcu -left- rain
mcu --> temp_sensor : frägt an
temp_sensor --> mcu : antwortet

note top of esp_webserver
	Nur grundlegende Funktionalitäten implementieren:
	Auf, Zu & Position
end note

note left of anemo
	Reed-Schalter evtl. gegen Hallsensor austauschen (längere Haltbarkeit)
end note

@enduml
